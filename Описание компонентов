#### **`app/bot/`**

- `handlers/`:
    - **`start.py`** — обработчик команды `/start` (приветствие пользователя, начало взаимодействия).
    - **`forms.py`** — обработка заполнения форм (получение данных через сообщения, валидация).
    - **`stats.py`** — обработка запросов на получение статистики (графики, сводки).
- **`middlewares.py`** — добавление промежуточных функций, например, логирование или проверка авторизации.
- **`commands.py`** — регистрация всех команд и обработчиков.

#### **`app/core/`**

- **`config.py`**:
    - Чтение конфигурации из `.env` (токен бота, параметры подключения к БД).
    - Использование библиотеки `pydantic` или `dotenv`.
- **`db.py`**:
    - Инициализация подключения к PostgreSQL через SQLAlchemy.
    - Импорты моделей из `models.py`.
- **`models.py`**:
    - Определение таблиц базы данных:
        - Таблица пользователей.
        - Таблица для сохранения заполненных форм.
        - Таблица для логирования действий.
- **`migrations/`**:
    - Использование Alembic для управления миграциями схемы базы данных.

#### **`app/services/`**

- **`form_service.py`**:
    - Логика сохранения заполненных форм в базу данных.
    - Валидация данных форм.
- **`stats_service.py`**:
    - Генерация статистики на основе данных в БД.
    - Построение графиков через pandas и, при необходимости, matplotlib или seaborn.

---
